//Step 0 ope the image as split channel.
//run("Bio-Formats Importer", "open=[D:/JeanMerot/ImagesJean/20190313/Kir2 Coll 1h 5d 30dyn onight.nd2] color_mode=Default display_metadata rois_import=[ROI manager] split_channels view=Hyperstack stack_order=XYCZT");
//selectWindow("Kir2 Coll 1h 5d 30dyn onight.nd2 - C=0");

//STEP 1
// Identify the ISOLATED cells
//run("Smooth", "stack");

//Step 2: score it as positive or negative
//Step 3 for each cell, perform the analysis (do anayse particle and tracking?)

// define where to save main configuration file. It will be shared among QuimP modules. 
// Any other file generated by QuimP will be saved in this folder as well 
qconfOutput = 'D:/\JeanMerot/\ImagesJean/\experiment2.QCONF' 
// open segmented image, you can use any other segmentation software to obtain masks 
open('D:\\JeanMerot\\ImagesJean\\20190313\\cropcelltest_segmented.tif') 
// open original image 
open('D:\\JeanMerot\\ImagesJean\\20190313\\cropcelltest.tif') 
//Frame du flux et separ√© flux vs pas flux
// 1) perform conversion from mask to QCONF file. This step corresponds to saving segmentation in BOA
run("Generate Qconf", "opts={options:{select_mask:cropcelltest_segmented.tif,select_original:cropcelltest.tif,step:1.0,smoothing:false,clear_nest:true,restore_snake:true},maskFileName:(),paramFile:("+qconfOutput+")}");
 
// 2) run ECMM analysis on configuration file 
run('ECMM Mapping', "opts={paramFile:("+qconfOutput+")}"); 
 
// 3) run ANA analysis, we use only one channel 

selectWindow('celltest.tif'); 
run('ANA', 'opts={plotOutlines:true,fluoResultTable:true,fluoResultTableAppend:false,' + 
     // configure displaying 
      'channel:0, userScale:5.0,' + 
     // set channel and cortex width (in um, pixel size from image will be used) 
      'normalise:true, sampleAtSame:false,' + 
      'clearFlu:false,' + 
      'paramFile:('+qconfOutput+')}'); 
 
// 4) run Q analysis 
run('QuimP Analysis', 'opts={trackColor:Summer,' + 'outlinePlot:Speed,' + 'sumCov:1.0,avgCov:0.0,' + 'mapRes:400,' + 'paramFile:('+qconfOutput+')}'); 
 
// 5) convert data to csv filesand generate coordinates maps 
run("Format converter", "opts={status:[ecmm:centroid,ecmm:outlines,map:coord,map:origin,map:ycoords,map:xcoords],areMultipleFiles:false,paramFile:("+qconfOutput+")}");